<script>
  var Review = Backbone.Model.extend({
    urlRoot: '/api/reviews/'
  });

  var Reviews = Backbone.Collection.extend({
    model: Review,
    url: '/api/reviews/',

    getCurrent: function () {
      return this.current;
    },

    setCurrent: function (data) {
      var first = _.find(this.models, function (review) {
        return review.get('student_id') === data.id;
      });

      if (!first) {
        this.current = new Review({
          student_id: data.id,
          student_name: data.name,
          thesis_title: data.title
        });
        this.add(this.current);
      } else {
        this.current = first;
      }
      this.trigger('set:current');
    }
  });

  var ListView = Backbone.View.extend({
    el: '#section-scroll',

    initialize: function () {
    },

    events: {
      'click .student-listing' : 'setForm'
    },

    setForm: function (e) {
      var stu = $(e.target).closest('.student-listing');

      this.collection.setCurrent(stu.data());
    },

    render: function () {
      return this;
    }
  });

  var ReviewView = Backbone.View.extend({
    el: '#review-section',

    initialize: function () {
      this.collection.bind('set:current', this.render, this);
    },

    events: {
      'keypress textarea': 'update',
      'blur textarea': 'update',
      'change textarea': 'update',
      'click .button' : 'updateSave'
    },

    updateSave: function (event) {
      this.$el
        .addClass('pending')
        .removeClass('changed')
        .removeClass('synced');
      this.save();
    },

    save: function () {
      var view = this;
      var model = this.collection.getCurrent();

      _.forEach(view.$el.find('textarea'), function (ta) {
        var fieldName = $(ta).attr('id');
        var val = $(ta).val();
        model.set(fieldName, val);
      });

      model.save(model.attributes, {
        success: function (model) {
          view.$el
            .addClass('synced')
            .removeClass('changed')
            .removeClass('pending');
        }
      });
    },

    update: function (event) {
      this.$el
        .addClass('changed')
        .removeClass('synced')
        .removeClass('pending');
      var value = $(event.target).val();
      var fieldName = $(event.target).attr('id');
      var model = this.collection.getCurrent();
      model.set(fieldName, value);
    },

    render: function () {
      this.$el.empty();
      var template = Handlebars.compile($('#review-form-template').html());
      var currentReview = this.collection.getCurrent();

      this.$el.html(template(currentReview.toJSON()));
      return this;
    }
  });

  $(document).ready(function () {
    $('.section-heading').click(function () {
      var slug = $(this).data().slug;
      $('.section-listing[id!="section-'+slug+'"]').hide();
      $('#section-'+slug).toggle();
    });

    reviews = new Reviews(<%= @reviews.to_json %>);
    lv = new ListView({collection: reviews});
    rv = new ReviewView({collection: reviews});
  });
</script>

<link rel="stylesheet" href="/css/reviews.css" />

<div class="col-12">
  <h1 class="page-title">Thesis Week Reviews</h1>
</div>

<div class="col-3" id="section-scroll">
<% @sections.each do |section| %>
  <div class="section-heading" data-slug="<%= section.slug %>"><%= section.advisor.first_name %>: <%= section.name %></div>
  <ul class="section-listing" id="section-<%= section.slug %>">
    <% section.students.each do |student| %>
    <li class="student-listing" data-id="<%= student.id %>" data-name="<%= student.to_s %>" data-title="<%= student.thesis.title %>">
      <div class="student-heading">
        <div><%= student %></div>
      </div>
    </li>
    <% end %>
  </ul>
<% end %>
</div>

<div class="col-9" id="review-section">
  Click on a section name and then a student name to write a review.
</div>

<script type="text/template" id="review-form-template">
  <h5>
    <span class="student-name">{{student_name}}</span> :
    <span class="thesis-title">{{thesis_title}}</span>
  </h5>
  <div id="ajax-status"></div>
  <div class="presentation-time"></div>

  <div class="question-section" id="proof-of-concept-section">
    <label for="proof_of_concept" class="required">
      Did this project meet the basic proof-of-concept requirement for an ITP Thesis? If not, elaborate?
    </label>
    <textarea id="proof_of_concept">{{proof_of_concept}}</textarea>
  </div>

  <div class="question-section" id="strongest-part-status">
    <label for="strongest_part">
      What are the strongest parts of the project?
    </label>
    <textarea id="strongest_part">{{strongest_part}}</textarea>
  </div>

  <div class="questionPsection" id="project-life-section">
    <label for="project_life">
      Do you think this project has a life in the real world after Thesis? How? Where?
    </label>
    <textarea id="project_life">{{project_life}}</textarea>
  </div>

  <div class="question-section" id="presentation-quality-section">
    <label for="presentation_quality">
      How was the Presentation? Clear? Engaging? Not? Suggestions?
    </label>
    <textarea id="presentation_quality">{{presentation_quality}}</textarea>
  </div>

  <div class="action-buttons">
    <div class="button publish-button"><div class="glyphicons cloud"><i></i></div> Save</div>

    <span class="details">If the button is green, the form is saved. If it's gray, there are unsaved changes</span>
  </div>
</script>